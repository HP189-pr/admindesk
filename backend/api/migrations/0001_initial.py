# Generated by Django 5.2.3 on 2025-10-04 05:40

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('hdid', models.AutoField(primary_key=True, serialize=False)),
                ('holiday_date', models.DateField()),
                ('holiday_name', models.CharField(max_length=255)),
                ('holiday_day', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'holiday',
            },
        ),
        migrations.CreateModel(
            name='DocRec',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('apply_for', models.CharField(choices=[('VR', 'Verification'), ('IV', 'Institutional Verification'), ('PR', 'Provisional'), ('MG', 'Migration'), ('GT', 'Grade To Marks')], db_column='apply_for', max_length=2)),
                ('doc_rec_id', models.CharField(db_column='doc_rec_id', max_length=20, unique=True)),
                ('pay_by', models.CharField(choices=[('CASH', 'Cash'), ('BANK', 'Bank'), ('UPI', 'UPI'), ('NA', 'Not Applicable')], db_column='pay_by', max_length=10)),
                ('pay_rec_no_pre', models.CharField(blank=True, db_column='pay_rec_no_pre', max_length=20, null=True)),
                ('pay_rec_no', models.CharField(blank=True, db_column='pay_rec_no', max_length=50, null=True)),
                ('pay_amount', models.DecimalField(db_column='pay_amount', decimal_places=2, default=0, max_digits=12)),
                ('createdat', models.DateTimeField(auto_now_add=True, db_column='createdat')),
                ('updatedat', models.DateTimeField(auto_now=True, db_column='updatedat')),
                ('doc_rec_date', models.DateField(blank=True, db_column='doc_rec_date', null=True)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doc_recs_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'doc_rec',
            },
        ),
        migrations.CreateModel(
            name='Eca',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('eca_name', models.CharField(blank=True, db_column='eca_name', max_length=255, null=True)),
                ('eca_ref_no', models.CharField(blank=True, db_column='eca_ref_no', max_length=100, null=True)),
                ('eca_send_date', models.DateField(blank=True, db_column='eca_send_date', null=True)),
                ('eca_remark', models.TextField(blank=True, db_column='eca_remark', null=True)),
                ('createdat', models.DateTimeField(auto_now_add=True, db_column='createdat')),
                ('updatedat', models.DateTimeField(auto_now=True, db_column='updatedat')),
                ('created_by', models.ForeignKey(blank=True, db_column='createdby', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eca_created', to=settings.AUTH_USER_MODEL)),
                ('doc_rec', models.ForeignKey(blank=True, db_column='doc_rec_id', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='eca_entries', to='api.docrec', to_field='doc_rec_id')),
            ],
            options={
                'db_table': 'eca',
            },
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('institute_id', models.IntegerField(primary_key=True, serialize=False)),
                ('institute_code', models.CharField(db_index=True, max_length=255, unique=True)),
                ('institute_name', models.CharField(blank=True, max_length=255, null=True)),
                ('institute_campus', models.CharField(blank=True, max_length=255, null=True)),
                ('institute_address', models.TextField(blank=True, null=True)),
                ('institute_city', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdat')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updatedat')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updatedby', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_institutes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'institute',
            },
        ),
        migrations.CreateModel(
            name='InstVerificationMain',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('inst_veri_number', models.CharField(blank=True, db_column='inst_veri_number', max_length=100, null=True)),
                ('inst_veri_date', models.DateField(blank=True, db_column='inst_veri_date', null=True)),
                ('rec_inst_name', models.CharField(blank=True, db_column='rec_inst_name', max_length=255, null=True)),
                ('rec_inst_address_1', models.CharField(blank=True, db_column='rec_inst_address_1', max_length=255, null=True)),
                ('rec_inst_address_2', models.CharField(blank=True, db_column='rec_inst_address_2', max_length=255, null=True)),
                ('rec_inst_location', models.CharField(blank=True, db_column='rec_inst_location', max_length=255, null=True)),
                ('rec_inst_city', models.CharField(blank=True, db_column='rec_inst_city', max_length=255, null=True)),
                ('rec_inst_pin', models.CharField(blank=True, db_column='rec_inst_pin', max_length=20, null=True)),
                ('rec_inst_email', models.EmailField(blank=True, db_column='rec_inst_email', max_length=254, null=True)),
                ('rec_by', models.CharField(blank=True, db_column='rec_by', max_length=255, null=True)),
                ('doc_rec_date', models.DateField(blank=True, db_column='doc_rec_date', null=True)),
                ('inst_ref_no', models.CharField(blank=True, db_column='inst_ref_no', max_length=100, null=True)),
                ('ref_date', models.DateField(blank=True, db_column='ref_date', null=True)),
                ('doc_rec', models.ForeignKey(blank=True, db_column='doc_rec_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inst_verifications', to='api.docrec', to_field='doc_rec_id')),
                ('institute', models.ForeignKey(blank=True, db_column='institute_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inst_verification_main', to='api.institute')),
            ],
            options={
                'db_table': 'inst_verification_main',
            },
        ),
        migrations.CreateModel(
            name='MainBranch',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('maincourse_id', models.CharField(db_index=True, max_length=255, unique=True)),
                ('course_name', models.CharField(blank=True, max_length=255, null=True)),
                ('course_code', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdat')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updatedat')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updatedby', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'main_branch',
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('student_name', models.CharField(db_index=True, max_length=100)),
                ('enrollment_date', models.DateField(blank=True, null=True)),
                ('admission_date', models.DateField(blank=True, null=True)),
                ('batch', models.IntegerField()),
                ('enrollment_no', models.CharField(blank=True, db_column='enrollment_no', max_length=50, null=True, unique=True)),
                ('temp_enroll_no', models.CharField(blank=True, db_column='temp_enroll_no', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_enrollments', to=settings.AUTH_USER_MODEL)),
                ('institute', models.ForeignKey(db_column='institute_id', on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='api.institute')),
                ('maincourse', models.ForeignKey(db_column='maincourse_id', on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='api.mainbranch', to_field='maincourse_id')),
            ],
            options={
                'db_table': 'enrollment',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('moduleid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdat')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updatedat')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updatedby', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_module',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('menuid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdat')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updatedat')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updatedby', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('module', models.ForeignKey(db_column='moduleid', on_delete=django.db.models.deletion.CASCADE, to='api.module')),
            ],
            options={
                'db_table': 'api_menu',
            },
        ),
        migrations.CreateModel(
            name='PayPrefixRule',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pay_by', models.CharField(choices=[('CASH', 'Cash'), ('BANK', 'Bank'), ('UPI', 'UPI'), ('NA', 'Not Applicable')], db_column='pay_by', max_length=10)),
                ('year_full', models.PositiveIntegerField(blank=True, db_column='year_full', null=True)),
                ('pattern', models.CharField(db_column='pattern', max_length=50)),
                ('is_active', models.BooleanField(db_column='is_active', default=True)),
                ('priority', models.IntegerField(db_column='priority', default=0)),
                ('createdat', models.DateTimeField(auto_now_add=True, db_column='createdat')),
                ('updatedat', models.DateTimeField(auto_now=True, db_column='updatedat')),
            ],
            options={
                'db_table': 'pay_prefix_rule',
                'indexes': [models.Index(fields=['pay_by', 'year_full'], name='idx_payprefix_by_year'), models.Index(fields=['is_active'], name='idx_payprefix_active')],
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('gender', models.CharField(blank=True, db_column='gender', max_length=20, null=True)),
                ('birth_date', models.DateField(blank=True, db_column='birth_date', null=True)),
                ('address1', models.CharField(blank=True, db_column='address1', max_length=255, null=True)),
                ('address2', models.CharField(blank=True, db_column='address2', max_length=255, null=True)),
                ('city1', models.CharField(blank=True, db_column='city1', max_length=100, null=True)),
                ('city2', models.CharField(blank=True, db_column='city2', max_length=100, null=True)),
                ('contact_no', models.CharField(blank=True, db_column='contact_no', max_length=50, null=True)),
                ('email', models.EmailField(blank=True, db_column='email', max_length=254, null=True)),
                ('fees', models.DecimalField(blank=True, db_column='fees', decimal_places=2, default=0, max_digits=12, null=True)),
                ('hostel_required', models.BooleanField(db_column='hostel_required', default=False)),
                ('aadhar_no', models.CharField(blank=True, db_column='aadhar_no', max_length=20, null=True)),
                ('abc_id', models.CharField(blank=True, db_column='abc_id', max_length=50, null=True)),
                ('mobile_adhar', models.CharField(blank=True, db_column='mobile_adhar', max_length=20, null=True)),
                ('name_adhar', models.CharField(blank=True, db_column='name_adhar', max_length=255, null=True)),
                ('mother_name', models.CharField(blank=True, db_column='mother_name', max_length=255, null=True)),
                ('category', models.CharField(blank=True, db_column='category', max_length=50, null=True)),
                ('photo_uploaded', models.BooleanField(db_column='photo_uploaded', default=False)),
                ('is_d2d', models.BooleanField(db_column='is_d2d', default=False)),
                ('program_medium', models.CharField(blank=True, db_column='program_medium', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('enrollment', models.OneToOneField(db_column='enrollment_no', db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to='api.enrollment', to_field='enrollment_no')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_student_profiles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'student_profile',
            },
        ),
        migrations.CreateModel(
            name='SubBranch',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subcourse_id', models.CharField(db_index=True, max_length=255, unique=True)),
                ('subcourse_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdat')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updatedat')),
                ('maincourse', models.ForeignKey(db_column='maincourse_id', on_delete=django.db.models.deletion.CASCADE, related_name='sub_branches', to='api.mainbranch', to_field='maincourse_id')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updatedby', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sub_branch',
            },
        ),
        migrations.CreateModel(
            name='ProvisionalRecord',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('student_name', models.CharField(db_column='student_name', max_length=255)),
                ('class_obtain', models.CharField(blank=True, db_column='class_obtain', max_length=100, null=True)),
                ('prv_number', models.CharField(db_column='prv_number', max_length=50, unique=True)),
                ('prv_date', models.DateField(db_column='prv_date')),
                ('passing_year', models.CharField(db_column='passing_year', max_length=20)),
                ('prv_status', models.CharField(choices=[('Pending', 'Pending'), ('Issued', 'Issued'), ('Cancelled', 'Cancelled')], db_column='prv_status', default='Pending', max_length=20)),
                ('pay_rec_no', models.CharField(db_column='pay_rec_no', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('created_by', models.ForeignKey(blank=True, db_column='createdby', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='provisional_created', to=settings.AUTH_USER_MODEL)),
                ('doc_rec', models.ForeignKey(db_column='doc_rec_id', on_delete=django.db.models.deletion.CASCADE, related_name='provisional_records', to='api.docrec')),
                ('enrollment', models.ForeignKey(db_column='enrollment_no', db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='provisional_records', to='api.enrollment', to_field='enrollment_no')),
                ('institute', models.ForeignKey(db_column='institute_id', on_delete=django.db.models.deletion.CASCADE, related_name='provisional_records', to='api.institute')),
                ('maincourse', models.ForeignKey(db_column='maincourse_id', on_delete=django.db.models.deletion.CASCADE, related_name='provisional_records', to='api.mainbranch', to_field='maincourse_id')),
                ('subcourse', models.ForeignKey(db_column='subcourse_id', on_delete=django.db.models.deletion.CASCADE, related_name='provisional_records', to='api.subbranch', to_field='subcourse_id')),
            ],
            options={
                'db_table': 'provisional',
            },
        ),
        migrations.CreateModel(
            name='MigrationRecord',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('student_name', models.CharField(db_column='student_name', max_length=255)),
                ('mg_number', models.CharField(db_column='mg_number', max_length=50, unique=True)),
                ('mg_date', models.DateField(db_column='mg_date')),
                ('exam_year', models.CharField(db_column='exam_year', max_length=20)),
                ('admission_year', models.CharField(db_column='admission_year', max_length=20)),
                ('exam_details', models.TextField(blank=True, db_column='exam_details', null=True)),
                ('mg_status', models.CharField(choices=[('Pending', 'Pending'), ('Issued', 'Issued'), ('Cancelled', 'Cancelled')], db_column='mg_status', default='Pending', max_length=20)),
                ('pay_rec_no', models.CharField(db_column='pay_rec_no', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('created_by', models.ForeignKey(blank=True, db_column='createdby', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='migration_created', to=settings.AUTH_USER_MODEL)),
                ('doc_rec', models.ForeignKey(db_column='doc_rec_id', on_delete=django.db.models.deletion.CASCADE, related_name='migration_records', to='api.docrec')),
                ('enrollment', models.ForeignKey(db_column='enrollment_no', db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='migration_records', to='api.enrollment', to_field='enrollment_no')),
                ('institute', models.ForeignKey(db_column='institute_id', on_delete=django.db.models.deletion.CASCADE, related_name='migration_records', to='api.institute')),
                ('maincourse', models.ForeignKey(db_column='maincourse_id', on_delete=django.db.models.deletion.CASCADE, related_name='migration_records', to='api.mainbranch', to_field='maincourse_id')),
                ('subcourse', models.ForeignKey(db_column='subcourse_id', on_delete=django.db.models.deletion.CASCADE, related_name='migration_records', to='api.subbranch', to_field='subcourse_id')),
            ],
            options={
                'db_table': 'migration',
            },
        ),
        migrations.CreateModel(
            name='InstVerificationStudent',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('sr_no', models.PositiveIntegerField(blank=True, db_column='sr_no', null=True)),
                ('student_name', models.CharField(blank=True, db_column='student_name', max_length=255, null=True)),
                ('type_of_credential', models.CharField(blank=True, db_column='type_of_credential', max_length=50, null=True)),
                ('month_year', models.CharField(blank=True, db_column='month_year', max_length=20, null=True)),
                ('verification_status', models.CharField(blank=True, choices=[('IN_PROGRESS', 'In Progress'), ('PENDING', 'Pending'), ('CORRECTION', 'Correction'), ('CANCEL', 'Cancel'), ('DONE', 'Done')], db_column='verification_status', max_length=20, null=True)),
                ('doc_rec', models.ForeignKey(blank=True, db_column='doc_rec_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inst_verification_students', to='api.docrec', to_field='doc_rec_id')),
                ('enrollment', models.ForeignKey(blank=True, db_column='enrollment_no', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inst_verification_students', to='api.enrollment', to_field='enrollment_no')),
                ('institute', models.ForeignKey(blank=True, db_column='institute_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inst_verification_students', to='api.institute')),
                ('main_course', models.ForeignKey(blank=True, db_column='main_course', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inst_verification_students', to='api.mainbranch', to_field='maincourse_id')),
                ('sub_course', models.ForeignKey(blank=True, db_column='sub_course', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inst_verification_students', to='api.subbranch', to_field='subcourse_id')),
            ],
            options={
                'db_table': 'inst_verification_student',
            },
        ),
        migrations.CreateModel(
            name='InstituteCourseOffering',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('campus', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdat')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updatedat')),
                ('institute', models.ForeignKey(db_column='institute_id', on_delete=django.db.models.deletion.CASCADE, related_name='course_offerings', to='api.institute')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updatedby', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('maincourse', models.ForeignKey(db_column='maincourse_id', on_delete=django.db.models.deletion.CASCADE, related_name='institute_offerings', to='api.mainbranch', to_field='maincourse_id')),
                ('subcourse', models.ForeignKey(blank=True, db_column='subcourse_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='institute_offerings', to='api.subbranch', to_field='subcourse_id')),
            ],
            options={
                'db_table': 'institute_course_offering',
            },
        ),
        migrations.AddField(
            model_name='enrollment',
            name='subcourse',
            field=models.ForeignKey(db_column='subcourse_id', on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='api.subbranch', to_field='subcourse_id'),
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('permitid', models.AutoField(primary_key=True, serialize=False)),
                ('can_view', models.BooleanField(db_column='canview', default=False)),
                ('can_edit', models.BooleanField(db_column='canedit', default=False)),
                ('can_delete', models.BooleanField(db_column='candelete', default=False)),
                ('can_create', models.BooleanField(db_column='cancreate', default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdat')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updatedat')),
                ('menu', models.ForeignKey(blank=True, db_column='menuid', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.menu')),
                ('module', models.ForeignKey(blank=True, db_column='moduleid', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.module')),
                ('user', models.ForeignKey(db_column='userid', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_userpermissions',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('profileid', models.AutoField(primary_key=True, serialize=False)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('bio', models.TextField(blank=True, null=True)),
                ('social_links', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdat')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updatedat')),
                ('user', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_profiles',
            },
        ),
        migrations.CreateModel(
            name='Verification',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('date', models.DateField(db_column='doc_rec_date', default=django.utils.timezone.now, verbose_name='Doc Record Date')),
                ('student_name', models.CharField(db_column='student_name', max_length=255)),
                ('tr_count', models.PositiveSmallIntegerField(db_column='no_of_transcript', default=0)),
                ('ms_count', models.PositiveSmallIntegerField(db_column='no_of_marksheet', default=0)),
                ('dg_count', models.PositiveSmallIntegerField(db_column='no_of_degree', default=0)),
                ('moi_count', models.PositiveSmallIntegerField(db_column='no_of_moi', default=0)),
                ('backlog_count', models.PositiveSmallIntegerField(db_column='no_of_backlog', default=0)),
                ('pay_rec_no', models.CharField(blank=True, db_column='pay_rec_no', max_length=100, null=True)),
                ('status', models.CharField(choices=[('IN_PROGRESS', 'In Progress'), ('PENDING', 'Pending'), ('CORRECTION', 'Correction'), ('CANCEL', 'Cancel'), ('DONE', 'Done')], db_column='status', default='IN_PROGRESS', max_length=20)),
                ('final_no', models.CharField(blank=True, db_column='final_no', max_length=50, null=True, unique=True)),
                ('mail_status', models.CharField(choices=[('NOT_SENT', 'Not Sent'), ('SENT', 'Sent'), ('FAILED', 'Failed')], db_column='mail_send_status', default='NOT_SENT', max_length=20)),
                ('eca_required', models.BooleanField(db_column='eca_required', default=False)),
                ('eca_name', models.CharField(blank=True, db_column='eca_name', max_length=255, null=True)),
                ('eca_ref_no', models.CharField(blank=True, db_column='eca_ref_no', max_length=100, null=True)),
                ('eca_submit_date', models.DateField(blank=True, db_column='eca_submit_date', null=True)),
                ('eca_mail_status', models.CharField(choices=[('NOT_SENT', 'Not Sent'), ('SENT', 'Sent'), ('FAILED', 'Failed')], db_column='eca_status', default='NOT_SENT', max_length=20)),
                ('eca_resend_count', models.PositiveSmallIntegerField(db_column='eca_resend_count', default=0)),
                ('eca_last_action_at', models.DateTimeField(blank=True, db_column='eca_last_action_at', null=True)),
                ('eca_last_to_email', models.EmailField(blank=True, db_column='eca_last_to_email', max_length=254, null=True)),
                ('eca_history', models.JSONField(blank=True, db_column='eca_history', null=True)),
                ('remark', models.TextField(blank=True, db_column='vr_remark', null=True)),
                ('vr_done_date', models.DateField(blank=True, db_column='vr_done_date', null=True)),
                ('last_resubmit_date', models.DateField(blank=True, db_column='last_resubmit_date', null=True)),
                ('last_resubmit_status', models.CharField(blank=True, db_column='last_resubmit_status', max_length=20, null=True)),
                ('createdat', models.DateTimeField(auto_now_add=True, db_column='createdat')),
                ('updatedat', models.DateTimeField(auto_now=True, db_column='updatedat')),
                ('doc_rec', models.ForeignKey(blank=True, db_column='doc_rec_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verifications', to='api.docrec', to_field='doc_rec_id')),
                ('enrollment', models.ForeignKey(db_column='enrollment_id', on_delete=django.db.models.deletion.RESTRICT, related_name='verifications', to='api.enrollment')),
                ('replaces_verification', models.ForeignKey(blank=True, db_column='replaces_verification_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='superseded_by', to='api.verification')),
                ('second_enrollment', models.ForeignKey(blank=True, db_column='second_enrollment_id', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='secondary_verifications', to='api.enrollment')),
                ('updatedby', models.ForeignKey(blank=True, db_column='updatedby', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'verification',
            },
        ),
        migrations.AddIndex(
            model_name='docrec',
            index=models.Index(fields=['doc_rec_id'], name='idx_doc_rec_id'),
        ),
        migrations.AddIndex(
            model_name='docrec',
            index=models.Index(fields=['pay_rec_no'], name='idx_doc_pay_rec'),
        ),
        migrations.AddIndex(
            model_name='eca',
            index=models.Index(fields=['doc_rec'], name='idx_eca_doc_rec'),
        ),
        migrations.AddIndex(
            model_name='instverificationmain',
            index=models.Index(fields=['doc_rec'], name='idx_ivm_doc_rec'),
        ),
        migrations.AddIndex(
            model_name='instverificationmain',
            index=models.Index(fields=['institute'], name='idx_ivm_institute'),
        ),
        migrations.AddIndex(
            model_name='instverificationmain',
            index=models.Index(fields=['inst_veri_number'], name='idx_ivm_veri_no'),
        ),
        migrations.AddIndex(
            model_name='studentprofile',
            index=models.Index(fields=['enrollment'], name='idx_sp_enrollment'),
        ),
        migrations.AddIndex(
            model_name='provisionalrecord',
            index=models.Index(fields=['doc_rec'], name='idx_prv_doc_rec'),
        ),
        migrations.AddIndex(
            model_name='provisionalrecord',
            index=models.Index(fields=['enrollment'], name='idx_prv_enrollment'),
        ),
        migrations.AddIndex(
            model_name='provisionalrecord',
            index=models.Index(fields=['institute'], name='idx_prv_institute'),
        ),
        migrations.AddIndex(
            model_name='provisionalrecord',
            index=models.Index(fields=['prv_number'], name='idx_prv_number'),
        ),
        migrations.AddIndex(
            model_name='migrationrecord',
            index=models.Index(fields=['doc_rec'], name='idx_mg_doc_rec'),
        ),
        migrations.AddIndex(
            model_name='migrationrecord',
            index=models.Index(fields=['enrollment'], name='idx_mg_enrollment'),
        ),
        migrations.AddIndex(
            model_name='migrationrecord',
            index=models.Index(fields=['institute'], name='idx_mg_institute'),
        ),
        migrations.AddIndex(
            model_name='migrationrecord',
            index=models.Index(fields=['mg_number'], name='idx_mg_number'),
        ),
        migrations.AddIndex(
            model_name='instverificationstudent',
            index=models.Index(fields=['doc_rec'], name='idx_ivs_doc_rec'),
        ),
        migrations.AddIndex(
            model_name='instverificationstudent',
            index=models.Index(fields=['enrollment'], name='idx_ivs_enrollment'),
        ),
        migrations.AddIndex(
            model_name='instverificationstudent',
            index=models.Index(fields=['institute'], name='idx_ivs_institute'),
        ),
        migrations.AddIndex(
            model_name='institutecourseoffering',
            index=models.Index(fields=['institute', 'maincourse', 'subcourse'], name='institute_c_institu_b06a45_idx'),
        ),
        migrations.AddIndex(
            model_name='enrollment',
            index=models.Index(fields=['institute', 'subcourse', 'maincourse'], name='enrollment_institu_e42e69_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userpermission',
            unique_together={('user', 'module', 'menu')},
        ),
        migrations.AddIndex(
            model_name='verification',
            index=models.Index(fields=['enrollment'], name='idx_verification_enrollment'),
        ),
        migrations.AddIndex(
            model_name='verification',
            index=models.Index(fields=['second_enrollment'], name='idx_verif_sec_enroll'),
        ),
        migrations.AddIndex(
            model_name='verification',
            index=models.Index(fields=['status'], name='idx_verification_status'),
        ),
        migrations.AddIndex(
            model_name='verification',
            index=models.Index(fields=['final_no'], name='idx_verification_final_no'),
        ),
        migrations.AddIndex(
            model_name='verification',
            index=models.Index(fields=['pay_rec_no'], name='idx_verification_pay_rec_no'),
        ),
        migrations.AddIndex(
            model_name='verification',
            index=models.Index(fields=['doc_rec'], name='idx_verification_doc_rec'),
        ),
    ]
